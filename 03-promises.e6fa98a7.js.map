{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAGA,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtB,IAAIC,SAAQ,CAACC,EAASC,KACpCC,YAAW,KACLN,EACFI,EAAQ,CAAEG,SAAAT,EAAUU,MAAAT,IAEpBM,EAAO,CAAEE,SAAAT,EAAUU,MAAAT,GAAQ,GAE5BA,EAAM,IAGRU,MAAK,EAACF,SAAEA,EAAQC,MAAEA,MACjBE,EAAAf,GAASgB,OAAOC,QAAQ,uBAAqBL,QAAiBC,MAAU,IAEzEK,OAAM,EAACN,SAAEA,EAAQC,MAAEA,MAClBE,EAAAf,GAASgB,OAAOG,QAAQ,sBAAoBP,QAAeC,MAAU,G,CAI3E,IAAIO,EAAaC,SAASC,cAAc,uBACpCC,EAAYF,SAASC,cAAc,sBACnCE,EAAcH,SAASC,cAAc,wBAC9BD,SAASC,cAAc,SAE7BG,iBAAiB,UAEtB,SAA8BC,GAC5BA,EAAMC,iBACN,IAAId,EAAQe,OAAOR,EAAWS,OAC1BC,EAAOF,OAAOL,EAAUM,OACxBE,EAASH,OAAOJ,EAAYK,OAChC,IAAK,IAAIG,EAAI,EAAGA,EAAID,EAAQC,IAC1B9B,EAAc8B,EAAI,EAAGnB,EAAQmB,EAAIF,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay)\n  });\n  promise\n    .then(({ position, delay }) => {\n      Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n}\n\nlet inputDelay = document.querySelector(`input[name='delay']`);\nlet inputstep = document.querySelector(`input[name='step']`);\nlet inputAmount = document.querySelector(`input[name='amount']`);\nlet form = document.querySelector(\".form\");\n\nform.addEventListener('submit', startPromiseCreation);\n\nfunction startPromiseCreation(event) {\n  event.preventDefault();\n  let delay = Number(inputDelay.value);\n  let step = Number(inputstep.value);\n  let amount = Number(inputAmount.value);\n  for (let i = 0; i < amount; i++) {\n    createPromise(i + 1, delay + i * step);\n  }\n}"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$createPromise","position1","delay1","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","position","delay","then","$parcel$interopDefault","Notify","success","catch","failure","$47d4ff9957288465$var$inputDelay","document","querySelector","$47d4ff9957288465$var$inputstep","$47d4ff9957288465$var$inputAmount","addEventListener","event","preventDefault","Number","value","step","amount","i"],"version":3,"file":"03-promises.e6fa98a7.js.map"}